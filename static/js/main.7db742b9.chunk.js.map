{"version":3,"sources":["actions/index.js","constant/index.js","components/Heros/Hero.jsx","components/Heros/HeroList.jsx","constant/routes.js","components/Profiles/Counter.jsx","components/common/Loader.jsx","components/Profiles/Profile.jsx","components/common/snackbar.js","components/common/globalStyle.jsx","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["API_HOST","HEROES_URL","HERO_PROFILE_URL","updateHeroProfile","attribute","point","dispatch","type","payload","patchHeroProfile","heroId","profile","a","axios","patch","res","data","console","error","shadow","HeroCard","styled","div","props","isCurrentHero","Image","img","Name","Hero","id","name","image","currentHeroId","useSelector","state","hero","useDispatch","onClick","updateCurrentHeroId","src","alt","Container","HeroListWrapper","HeroList","heroList","useEffect","get","heroes","map","key","CounterWrapper","Attribute","Point","Counter","availablePoints","setAvailablePoints","shouldDisableIncrease","shouldDisableDecrease","toUpperCase","color","fontSize","LoaderRing","Loader","ProfileWrapper","CountersWrapper","SubmitWrapper","AvailablePoints","SumbitButton","shouldDisableSubmit","Profile","useState","isLoading","setIsLoading","history","useHistory","enqueueSnackbar","useSnackbar","enqueueSuccessSnackbar","message","variant","autoHideDuration","enqueueErrorSnackbar","useCustomSnackbar","shouldRenderProfile","push","ROUTES","Object","keys","length","pointCounters","entries","handleSubmit","GlobalStyle","createGlobalStyle","App","max","exact","path","component","Boolean","window","location","hostname","match","initialHeroState","combineReducers","action","newProfile","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7db742b9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  FETCH_HERO_LIST,\n  FETCH_HERO_PROFILE,\n  UPDATE_CURRENT_HERO_ID,\n  UPDATE_HERO_PROFILE,\n} from \"constant\";\n\nexport const API_HOST = \"https://hahow-recruit.herokuapp.com\";\nexport const HEROES_URL = `${API_HOST}/heroes`;\nexport const HERO_PROFILE_URL = `${API_HOST}/heroes`;\n\nexport function fetchHeroList() {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(HEROES_URL);\n      dispatch({ type: FETCH_HERO_LIST, payload: res.data });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n}\n\nexport function updateCurrentHeroId(id) {\n  return (dispatch) => {\n    dispatch({ type: UPDATE_CURRENT_HERO_ID, payload: id });\n  };\n}\n\nexport function fetchHeroProfile(heroId) {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(`${HERO_PROFILE_URL}/${heroId}/profile`);\n      dispatch({ type: FETCH_HERO_PROFILE, payload: res.data });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n}\n\nexport function updateHeroProfile(attribute, point) {\n  return (dispatch) => {\n    dispatch({ type: UPDATE_HERO_PROFILE, payload: { [attribute]: point } });\n  };\n}\n\nexport async function patchHeroProfile(heroId, profile) {\n  try {\n    const res = await axios.patch(\n      `${HERO_PROFILE_URL}/${heroId}/profile`,\n      profile\n    );\n    return res.data;\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n}\n","export const FETCH_HERO_LIST = \"FETCH_HERO_LIST\";\nexport const FETCH_HERO_PROFILE = \"FETCH_HERO_PROFILE\";\nexport const UPDATE_CURRENT_HERO_ID = \"UPDATE_CURRENT_HERO_ID\";\nexport const UPDATE_HERO_PROFILE = \"UPDATE_HERO_PROFILE\";\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateCurrentHeroId } from \"actions\";\n\nconst lightGray = \"#c6c7c8\";\nconst shadow = \"4px 4px 4px 0 rgba(0, 0, 0, 0.4)\";\nconst translate = \"translate(-8px, -8px)\";\n\nconst HeroCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${lightGray};\n  border-radius: 5px;\n  padding: 0.5rem;\n  cursor: pointer;\n  margin-bottom: 1.5rem;\n  transition: transform 300ms ease-in-out;\n  transform: ${(props) => (props.isCurrentHero ? `${translate}` : \"none\")};\n  box-shadow: ${(props) => (props.isCurrentHero ? `${shadow}` : \"none\")};\n  &:hover {\n    transform: translate(-8px, -8px);\n    box-shadow: ${(props) => (props.isCurrentHero ? `${shadow}` : \"none\")};\n  }\n\n  @media (max-width: 992px) {\n    transform: ${(props) => (props.isCurrentHero ? `${translate}` : \"none\")};\n    box-shadow: ${(props) => (props.isCurrentHero ? `${shadow}` : \"none\")};\n  }\n`;\n\nconst Image = styled.img`\n  cursor: pointer;\n  border-radius: 5px;\n`;\n\nconst Name = styled.div`\n  padding: 1rem 0;\n  text-align: center;\n`;\n\nfunction Hero({ id, name, image }) {\n  const currentHeroId = useSelector((state) => state.hero.currentHeroId);\n  const dispatch = useDispatch();\n  const isCurrentHero = id === currentHeroId;\n\n  return (\n    <HeroCard\n      isCurrentHero={isCurrentHero}\n      onClick={() => {\n        dispatch(updateCurrentHeroId(id));\n      }}\n    >\n      <Image src={image} alt={name} />\n      <Name>{name}</Name>\n    </HeroCard>\n  );\n}\n\nexport default Hero;\n","import React, { useEffect } from \"react\";\nimport Hero from \"./Hero\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchHeroList } from \"actions\";\n\nconst Container = styled.div`\n  padding: 1rem 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst HeroListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  padding: 3rem 0;\n  width: 100%;\n  max-width: 1280px;\n\n  @media (max-width: 992px) {\n    width: 70%;\n  }\n  @media (max-width: 768px) {\n    width: 88%;\n  }\n  @media (max-width: 576px) {\n    width: 70%;\n    flex-direction: column;\n  }\n`;\n\nfunction HeroList() {\n  const heroList = useSelector((state) => state.heroList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchHeroList());\n  }, [dispatch]);\n\n  const heroes = heroList.map((hero) => {\n    const { id, name, image } = hero;\n    return <Hero key={`hero-${id}`} id={id} name={name} image={image} />;\n  });\n\n  return (\n    <Container>\n      <HeroListWrapper>{heroes}</HeroListWrapper>\n    </Container>\n  );\n}\n\nexport default HeroList;\n","export default {\n  HOEM_PAGE: \"/\",\n  HEROES_PAGE: \"/heroes\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\nimport { useDispatch } from \"react-redux\";\nimport { updateHeroProfile } from \"actions\";\n\nconst CounterWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 30%;\n\n  @media (max-width: 992px) {\n    width: 70%;\n  }\n  @media (max-width: 576px) {\n    width: 100%;\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Attribute = styled.div`\n  padding: 1rem;\n  width: 80px;\n`;\n\nconst Point = styled.div`\n  padding: 0 1rem;\n  width: 4rem;\n  text-align: center;\n`;\n\nfunction Counter({ attribute, point, availablePoints, setAvailablePoints }) {\n  const dispatch = useDispatch();\n  const shouldDisableIncrease = availablePoints === 0;\n  const shouldDisableDecrease = point === 0;\n\n  function handleIncrease() {\n    if (shouldDisableIncrease) return;\n    dispatch(updateHeroProfile(attribute, point + 1));\n    setAvailablePoints(availablePoints - 1);\n  }\n\n  function handleDecrease() {\n    if (shouldDisableDecrease) return;\n    dispatch(updateHeroProfile(attribute, point - 1));\n    setAvailablePoints(availablePoints + 1);\n  }\n\n  return (\n    <CounterWrapper>\n      <Attribute>{attribute.toUpperCase()}</Attribute>\n      <AddBoxIcon\n        color={shouldDisableIncrease ? \"disabled\" : \"action\"}\n        fontSize=\"large\"\n        onClick={handleIncrease}\n      />\n      <Point>{point}</Point>\n      <IndeterminateCheckBoxIcon\n        color={shouldDisableDecrease ? \"disabled\" : \"action\"}\n        fontSize=\"large\"\n        onClick={handleDecrease}\n      />\n    </CounterWrapper>\n  );\n}\n\nexport default Counter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LoaderRing = styled.div`\n  :before,\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 10px;\n    left: 100px;\n    width: 60px;\n    height: 60px;\n    border-radius: 100%;\n    border: 10px solid transparent;\n    border-top-color: #266794;\n  }\n  :before {\n    z-index: 100;\n    animation: spin 1s infinite;\n  }\n  :after {\n    border: 10px solid #c6c7c8;\n  }\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nfunction Loader() {\n  return <LoaderRing />;\n}\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Counter from \"./Counter\";\nimport Loader from \"components/common/Loader\";\nimport useCustomSnackbar from \"components/common/snackbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchHeroProfile, patchHeroProfile } from \"actions\";\nimport ROUTES from \"constant/routes\";\n\nconst Container = styled.div`\n  padding: 0 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    padding: 0.75rem;\n  }\n`;\n\nconst ProfileWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 1280px;\n  padding: 0 2rem;\n  position: relative;\n\n  @media (max-width: 992px) {\n    width: 70%;\n  }\n  @media (max-width: 768px) {\n    width: 88%;\n    padding: 0 0.75rem;\n  }\n  @media (max-width: 576px) {\n    width: 70%;\n    flex-direction: column;\n  }\n`;\n\nconst CountersWrapper = styled.div`\n  flex-grow: 1;\n  @media (max-width: 576px) {\n    width: 80%;\n    margin: auto;\n  }\n`;\n\nconst SubmitWrapper = styled.div`\n  padding: 1rem 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  @media (max-width: 992px) {\n    padding: 0.75rem 0;\n  }\n  @media (max-width: 576px) {\n    width: 70%;\n    margin: auto;\n  }\n`;\n\nconst AvailablePoints = styled.div`\n  font-size: 1.25rem;\n  font-weight: 700;\n  padding-bottom: 1rem;\n  text-align: center;\n`;\n\nconst SumbitButton = styled.div`\n  text-align: center;\n  padding: 0.75rem 4rem;\n  border-radius: 5px;\n  cursor: pointer;\n  color: #ffffff;\n  background-color: ${(props) =>\n    props.shouldDisableSubmit ? \"#c6c7c8\" : \"#266794\"};\n  cursor: ${(props) => (props.shouldDisableSubmit ? \"not-allowed\" : \"pointer\")};\n`;\n\nfunction Profile() {\n  const [availablePoints, setAvailablePoints] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const profile = useSelector((state) => state.hero.profile);\n  const currentHeroId = useSelector((state) => state.hero.currentHeroId);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { enqueueSuccessSnackbar, enqueueErrorSnackbar } = useCustomSnackbar();\n  const shouldRenderProfile = currentHeroId !== 0;\n  const shouldDisableSubmit = availablePoints !== 0;\n\n  // update URL, profile and reset availablePoints when change card\n  useEffect(() => {\n    setAvailablePoints(0);\n    if (currentHeroId !== 0) {\n      history.push(`${ROUTES.HEROES_PAGE}/${currentHeroId}`);\n      dispatch(fetchHeroProfile(currentHeroId));\n      setIsLoading(true);\n      return;\n    }\n    history.push(`${ROUTES.HEROES_PAGE}`);\n  }, [currentHeroId, dispatch, history]);\n\n  useEffect(() => {\n    if (Object.keys(profile).length > 0) {\n      setIsLoading(false);\n    }\n  }, [profile]);\n\n  /**\n   * data strcture of profile: {str: 2, int: 3, agi: 4, luk: 5}\n   */\n  const pointCounters = Object.entries(profile).map(([attribute, point]) => {\n    return (\n      <Counter\n        key={`attribute-${attribute}`}\n        attribute={attribute}\n        point={point}\n        availablePoints={availablePoints}\n        setAvailablePoints={setAvailablePoints}\n      />\n    );\n  });\n\n  async function handleSubmit(currentHeroId, profile) {\n    if (shouldDisableSubmit) return;\n    const res = await patchHeroProfile(currentHeroId, profile);\n    if (res === \"OK\") {\n      enqueueSuccessSnackbar(\"儲存成功\");\n      return;\n    }\n    enqueueErrorSnackbar(\"儲存失敗\");\n  }\n\n  return (\n    <>\n      {shouldRenderProfile ? (\n        <Container>\n          <ProfileWrapper>\n            <CountersWrapper>\n              {isLoading ? <Loader /> : pointCounters}\n            </CountersWrapper>\n            <SubmitWrapper>\n              <AvailablePoints>剩餘點數： {availablePoints}</AvailablePoints>\n              <SumbitButton\n                shouldDisableSubmit={shouldDisableSubmit}\n                onClick={() => {\n                  handleSubmit(currentHeroId, profile);\n                }}\n              >\n                儲存\n              </SumbitButton>\n            </SubmitWrapper>\n          </ProfileWrapper>\n        </Container>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport default Profile;\n","import { useSnackbar } from \"notistack\";\n\nexport default function useCustomSnackbar() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  function enqueueSuccessSnackbar(message) {\n    enqueueSnackbar(message, {\n      variant: \"success\",\n      autoHideDuration: 2000,\n    });\n  }\n\n  function enqueueErrorSnackbar(message) {\n    enqueueSnackbar(message, {\n      variant: \"error\",\n      autoHideDuration: 3000,\n    });\n  }\n  return { enqueueSuccessSnackbar, enqueueErrorSnackbar };\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n* {\n  box-sizing: border-box;\n}\n`;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport HeroList from \"./components/Heros/HeroList\";\nimport ROUTES from \"./constant/routes\";\nimport { SnackbarProvider } from \"notistack\";\nimport Profile from \"components/Profiles/Profile\";\nimport { GlobalStyle } from \"components/common/globalStyle\";\n\nfunction App() {\n  return (\n    <SnackbarProvider max={1}>\n      <GlobalStyle />\n      <HashRouter>\n        <Switch>\n          <Route exact path={ROUTES.HOEM_PAGE} component={HeroList} />\n          <Route path={ROUTES.HEROES_PAGE} component={HeroList} />\n        </Switch>\n        <Profile />\n      </HashRouter>\n    </SnackbarProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport {\n  FETCH_HERO_LIST,\n  FETCH_HERO_PROFILE,\n  UPDATE_CURRENT_HERO_ID,\n  UPDATE_HERO_PROFILE,\n} from \"constant\";\n\nexport const initialHeroState = { profile: {}, currentHeroId: 0 };\n\nexport function heroListReducer(state = [], action) {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_HERO_LIST:\n      return [...state, ...payload];\n    default:\n      return state;\n  }\n}\n\nexport function heroReducer(state = initialHeroState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_HERO_PROFILE:\n      return { ...state, ...{ profile: payload } };\n    case UPDATE_CURRENT_HERO_ID:\n      return { ...state, ...{ currentHeroId: payload } };\n    case UPDATE_HERO_PROFILE:\n      const newProfile = { ...state.profile, ...payload };\n      return { ...state, ...{ profile: newProfile } };\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  heroList: heroListReducer,\n  hero: heroReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}